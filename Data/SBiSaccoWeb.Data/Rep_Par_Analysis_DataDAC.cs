//====================================================================================================
// Base code generated with Momentum: DAC Gen (Build 2.5.5049.15162)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by Administrator at SAPSERVER on 12/31/2014 17:44:45 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using SBiSaccoWeb.Entities;

namespace SBiSaccoWeb.Data
{
    /// <summary>
    /// Rep_Par_Analysis_Data data access component. Manages CRUD operations for the Rep_Par_Analysis_Data table.
    /// </summary>
    public partial class Rep_Par_Analysis_DataDAC : DataAccessComponent
    {
        /// <summary>
        /// Inserts a new row in the Rep_Par_Analysis_Data table.
        /// </summary>
        /// <param name="rep_Par_Analysis_Data">A Rep_Par_Analysis_Data object.</param>
        /// <returns>An updated Rep_Par_Analysis_Data object.</returns>
        public Rep_Par_Analysis_Data Create(Rep_Par_Analysis_Data rep_Par_Analysis_Data)
        {
            const string SQL_STATEMENT =
                "INSERT INTO dbo.Rep_Par_Analysis_Data ([id], [branch_name], [load_date], [break_down], [break_down_type], [olb], [par], [contracts], [clients], [all_contracts], [all_clients], [par_30], [contracts_30], [clients_30], [par_1_30], [contracts_1_30], [clients_1_30], [par_31_60], [contracts_31_60], [clients_31_60], [par_61_90], [contracts_61_90], [clients_61_90], [par_91_180], [contracts_91_180], [clients_91_180], [par_181_365], [contracts_181_365], [clients_181_365], [par_365], [contracts_365], [clients_365], [break_down_id]) " +
                "VALUES(@id, @branch_name, @load_date, @break_down, @break_down_type, @olb, @par, @contracts, @clients, @all_contracts, @all_clients, @par_30, @contracts_30, @clients_30, @par_1_30, @contracts_1_30, @clients_1_30, @par_31_60, @contracts_31_60, @clients_31_60, @par_61_90, @contracts_61_90, @clients_61_90, @par_91_180, @contracts_91_180, @clients_91_180, @par_181_365, @contracts_181_365, @clients_181_365, @par_365, @contracts_365, @clients_365, @break_down_id);  ";

            // Connect to database.
            Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);
            using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))
            {
                // Set parameter values.
                db.AddInParameter(cmd, "@id", DbType.Int32, rep_Par_Analysis_Data.id);
                db.AddInParameter(cmd, "@branch_name", DbType.String, rep_Par_Analysis_Data.branch_name);
                db.AddInParameter(cmd, "@load_date", DbType.DateTime, rep_Par_Analysis_Data.load_date);
                db.AddInParameter(cmd, "@break_down", DbType.String, rep_Par_Analysis_Data.break_down);
                db.AddInParameter(cmd, "@break_down_type", DbType.AnsiString, rep_Par_Analysis_Data.break_down_type);
                db.AddInParameter(cmd, "@olb", DbType.Currency, rep_Par_Analysis_Data.olb);
                db.AddInParameter(cmd, "@par", DbType.Currency, rep_Par_Analysis_Data.par);
                db.AddInParameter(cmd, "@contracts", DbType.Int32, rep_Par_Analysis_Data.contracts);
                db.AddInParameter(cmd, "@clients", DbType.Int32, rep_Par_Analysis_Data.clients);
                db.AddInParameter(cmd, "@all_contracts", DbType.Int32, rep_Par_Analysis_Data.all_contracts);
                db.AddInParameter(cmd, "@all_clients", DbType.Int32, rep_Par_Analysis_Data.all_clients);
                db.AddInParameter(cmd, "@par_30", DbType.Currency, rep_Par_Analysis_Data.par_30);
                db.AddInParameter(cmd, "@contracts_30", DbType.Int32, rep_Par_Analysis_Data.contracts_30);
                db.AddInParameter(cmd, "@clients_30", DbType.Int32, rep_Par_Analysis_Data.clients_30);
                db.AddInParameter(cmd, "@par_1_30", DbType.Currency, rep_Par_Analysis_Data.par_1_30);
                db.AddInParameter(cmd, "@contracts_1_30", DbType.Int32, rep_Par_Analysis_Data.contracts_1_30);
                db.AddInParameter(cmd, "@clients_1_30", DbType.Int32, rep_Par_Analysis_Data.clients_1_30);
                db.AddInParameter(cmd, "@par_31_60", DbType.Currency, rep_Par_Analysis_Data.par_31_60);
                db.AddInParameter(cmd, "@contracts_31_60", DbType.Int32, rep_Par_Analysis_Data.contracts_31_60);
                db.AddInParameter(cmd, "@clients_31_60", DbType.Int32, rep_Par_Analysis_Data.clients_31_60);
                db.AddInParameter(cmd, "@par_61_90", DbType.Currency, rep_Par_Analysis_Data.par_61_90);
                db.AddInParameter(cmd, "@contracts_61_90", DbType.Int32, rep_Par_Analysis_Data.contracts_61_90);
                db.AddInParameter(cmd, "@clients_61_90", DbType.Int32, rep_Par_Analysis_Data.clients_61_90);
                db.AddInParameter(cmd, "@par_91_180", DbType.Currency, rep_Par_Analysis_Data.par_91_180);
                db.AddInParameter(cmd, "@contracts_91_180", DbType.Int32, rep_Par_Analysis_Data.contracts_91_180);
                db.AddInParameter(cmd, "@clients_91_180", DbType.Int32, rep_Par_Analysis_Data.clients_91_180);
                db.AddInParameter(cmd, "@par_181_365", DbType.Currency, rep_Par_Analysis_Data.par_181_365);
                db.AddInParameter(cmd, "@contracts_181_365", DbType.Int32, rep_Par_Analysis_Data.contracts_181_365);
                db.AddInParameter(cmd, "@clients_181_365", DbType.Int32, rep_Par_Analysis_Data.clients_181_365);
                db.AddInParameter(cmd, "@par_365", DbType.Currency, rep_Par_Analysis_Data.par_365);
                db.AddInParameter(cmd, "@contracts_365", DbType.Int32, rep_Par_Analysis_Data.contracts_365);
                db.AddInParameter(cmd, "@clients_365", DbType.Int32, rep_Par_Analysis_Data.clients_365);
                db.AddInParameter(cmd, "@break_down_id", DbType.Int32, rep_Par_Analysis_Data.break_down_id);

                db.ExecuteNonQuery(cmd);
            }

            return rep_Par_Analysis_Data;
        }

        /// <summary>
        /// Conditionally retrieves one or more rows from the Rep_Par_Analysis_Data table.
        /// </summary>
        /// <returns>A collection of Rep_Par_Analysis_Data objects.</returns>		
        public List<Rep_Par_Analysis_Data> Select()
        {
            // WARNING! The following SQL query does not contain a WHERE condition.
            // You are advised to include a WHERE condition to prevent any performance
            // issues when querying large resultsets.
            const string SQL_STATEMENT =
                "SELECT [id], [branch_name], [load_date], [break_down], [break_down_type], [olb], [par]" +
                        ", [contracts], [clients], [all_contracts], [all_clients], [par_30], [contracts_30]" +
                        ", [clients_30], [par_1_30], [contracts_1_30], [clients_1_30], [par_31_60], [contracts_31_60]" +
                        ", [clients_31_60], [par_61_90], [contracts_61_90], [clients_61_90], [par_91_180], [contracts_91_180]" +
                        ", [clients_91_180], [par_181_365], [contracts_181_365], [clients_181_365], [par_365]" +
                        ", [contracts_365], [clients_365], [break_down_id] " +
                "FROM dbo.Rep_Par_Analysis_Data ";

            List<Rep_Par_Analysis_Data> result = new List<Rep_Par_Analysis_Data>();

            // Connect to database.
            Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);
            using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))
            {
                using (IDataReader dr = db.ExecuteReader(cmd))
                {
                    while (dr.Read())
                    {
                        // Create a new Rep_Par_Analysis_Data
                        Rep_Par_Analysis_Data rep_Par_Analysis_Data = new Rep_Par_Analysis_Data();

                        // Read values.
                        rep_Par_Analysis_Data.id = base.GetDataValue<int>(dr, "id");
                        rep_Par_Analysis_Data.branch_name = base.GetDataValue<string>(dr, "branch_name");
                        rep_Par_Analysis_Data.load_date = base.GetDataValue<DateTime>(dr, "load_date");
                        rep_Par_Analysis_Data.break_down = base.GetDataValue<string>(dr, "break_down");
                        rep_Par_Analysis_Data.break_down_type = base.GetDataValue<string>(dr, "break_down_type");
                        rep_Par_Analysis_Data.olb = base.GetDataValue<decimal>(dr, "olb");
                        rep_Par_Analysis_Data.par = base.GetDataValue<decimal>(dr, "par");
                        rep_Par_Analysis_Data.contracts = base.GetDataValue<int>(dr, "contracts");
                        rep_Par_Analysis_Data.clients = base.GetDataValue<int>(dr, "clients");
                        rep_Par_Analysis_Data.all_contracts = base.GetDataValue<int>(dr, "all_contracts");
                        rep_Par_Analysis_Data.all_clients = base.GetDataValue<int>(dr, "all_clients");
                        rep_Par_Analysis_Data.par_30 = base.GetDataValue<decimal>(dr, "par_30");
                        rep_Par_Analysis_Data.contracts_30 = base.GetDataValue<int>(dr, "contracts_30");
                        rep_Par_Analysis_Data.clients_30 = base.GetDataValue<int>(dr, "clients_30");
                        rep_Par_Analysis_Data.par_1_30 = base.GetDataValue<decimal>(dr, "par_1_30");
                        rep_Par_Analysis_Data.contracts_1_30 = base.GetDataValue<int>(dr, "contracts_1_30");
                        rep_Par_Analysis_Data.clients_1_30 = base.GetDataValue<int>(dr, "clients_1_30");
                        rep_Par_Analysis_Data.par_31_60 = base.GetDataValue<decimal>(dr, "par_31_60");
                        rep_Par_Analysis_Data.contracts_31_60 = base.GetDataValue<int>(dr, "contracts_31_60");
                        rep_Par_Analysis_Data.clients_31_60 = base.GetDataValue<int>(dr, "clients_31_60");
                        rep_Par_Analysis_Data.par_61_90 = base.GetDataValue<decimal>(dr, "par_61_90");
                        rep_Par_Analysis_Data.contracts_61_90 = base.GetDataValue<int>(dr, "contracts_61_90");
                        rep_Par_Analysis_Data.clients_61_90 = base.GetDataValue<int>(dr, "clients_61_90");
                        rep_Par_Analysis_Data.par_91_180 = base.GetDataValue<decimal>(dr, "par_91_180");
                        rep_Par_Analysis_Data.contracts_91_180 = base.GetDataValue<int>(dr, "contracts_91_180");
                        rep_Par_Analysis_Data.clients_91_180 = base.GetDataValue<int>(dr, "clients_91_180");
                        rep_Par_Analysis_Data.par_181_365 = base.GetDataValue<decimal>(dr, "par_181_365");
                        rep_Par_Analysis_Data.contracts_181_365 = base.GetDataValue<int>(dr, "contracts_181_365");
                        rep_Par_Analysis_Data.clients_181_365 = base.GetDataValue<int>(dr, "clients_181_365");
                        rep_Par_Analysis_Data.par_365 = base.GetDataValue<decimal>(dr, "par_365");
                        rep_Par_Analysis_Data.contracts_365 = base.GetDataValue<int>(dr, "contracts_365");
                        rep_Par_Analysis_Data.clients_365 = base.GetDataValue<int>(dr, "clients_365");
                        rep_Par_Analysis_Data.break_down_id = base.GetDataValue<int>(dr, "break_down_id");

                        // Add to List.
                        result.Add(rep_Par_Analysis_Data);
                    }
                }
            }

            return result;
        }
    }
}

