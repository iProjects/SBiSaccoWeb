<?xml version="1.0" encoding="utf-8"?>
<ArrayOfClassModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ClassModel ClassName="EmployerDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="Employers data access component. Manages CRUD operations for the Employers table." ProductName="SBiSaccoWeb.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the Employers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;employer&quot;&gt;A Employer object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated Employer object.&lt;/returns&gt;&#xD;&#xA;		public Employer Create(Employer employer)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.Employers ([Name], [Email], [Telephone], [Address1], [Address2], [Slogan], [AuthorizedSignatory], [PIN], [NHIF], [NSSF], [BankBranchSortCode], [AccountName], [AccountNo], [Logo], [IsDefault], [IsActive], [IsDeleted]) &quot; +&#xD;&#xA;				&quot;VALUES(@Name, @Email, @Telephone, @Address1, @Address2, @Slogan, @AuthorizedSignatory, @PIN, @NHIF, @NSSF, @BankBranchSortCode, @AccountName, @AccountNo, @Logo, @IsDefault, @IsActive, @IsDeleted); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Name&quot;, DbType.String, employer.Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, employer.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Telephone&quot;, DbType.String, employer.Telephone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address1&quot;, DbType.String, employer.Address1);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address2&quot;, DbType.String, employer.Address2);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Slogan&quot;, DbType.String, employer.Slogan);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AuthorizedSignatory&quot;, DbType.String, employer.AuthorizedSignatory);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@PIN&quot;, DbType.String, employer.PIN);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NHIF&quot;, DbType.String, employer.NHIF);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NSSF&quot;, DbType.String, employer.NSSF);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@BankBranchSortCode&quot;, DbType.String, employer.BankBranchSortCode);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AccountName&quot;, DbType.String, employer.AccountName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AccountNo&quot;, DbType.String, employer.AccountNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Logo&quot;, DbType.String, employer.Logo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDefault&quot;, DbType.Boolean, employer.IsDefault);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsActive&quot;, DbType.Boolean, employer.IsActive);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, employer.IsDeleted);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				employer.Id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return employer;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the Employers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;employer&quot;&gt;A Employer entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(Employer employer)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.Employers &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[Name]=@Name, &quot; +&#xD;&#xA;					&quot;[Email]=@Email, &quot; +&#xD;&#xA;					&quot;[Telephone]=@Telephone, &quot; +&#xD;&#xA;					&quot;[Address1]=@Address1, &quot; +&#xD;&#xA;					&quot;[Address2]=@Address2, &quot; +&#xD;&#xA;					&quot;[Slogan]=@Slogan, &quot; +&#xD;&#xA;					&quot;[AuthorizedSignatory]=@AuthorizedSignatory, &quot; +&#xD;&#xA;					&quot;[PIN]=@PIN, &quot; +&#xD;&#xA;					&quot;[NHIF]=@NHIF, &quot; +&#xD;&#xA;					&quot;[NSSF]=@NSSF, &quot; +&#xD;&#xA;					&quot;[BankBranchSortCode]=@BankBranchSortCode, &quot; +&#xD;&#xA;					&quot;[AccountName]=@AccountName, &quot; +&#xD;&#xA;					&quot;[AccountNo]=@AccountNo, &quot; +&#xD;&#xA;					&quot;[Logo]=@Logo, &quot; +&#xD;&#xA;					&quot;[IsDefault]=@IsDefault, &quot; +&#xD;&#xA;					&quot;[IsActive]=@IsActive, &quot; +&#xD;&#xA;					&quot;[IsDeleted]=@IsDeleted &quot; +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Name&quot;, DbType.String, employer.Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, employer.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Telephone&quot;, DbType.String, employer.Telephone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address1&quot;, DbType.String, employer.Address1);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address2&quot;, DbType.String, employer.Address2);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Slogan&quot;, DbType.String, employer.Slogan);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AuthorizedSignatory&quot;, DbType.String, employer.AuthorizedSignatory);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@PIN&quot;, DbType.String, employer.PIN);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NHIF&quot;, DbType.String, employer.NHIF);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NSSF&quot;, DbType.String, employer.NSSF);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@BankBranchSortCode&quot;, DbType.String, employer.BankBranchSortCode);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AccountName&quot;, DbType.String, employer.AccountName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@AccountNo&quot;, DbType.String, employer.AccountNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Logo&quot;, DbType.String, employer.Logo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDefault&quot;, DbType.Boolean, employer.IsDefault);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsActive&quot;, DbType.Boolean, employer.IsActive);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, employer.IsDeleted);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, employer.Id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the Employers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.Employers &quot; +&#xD;&#xA;										 &quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the Employers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A Id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A Employer object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public Employer SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [Name], [Email], [Telephone], [Address1], [Address2], [Slogan], [AuthorizedSignatory]&quot;+&#xD;&#xA;						&quot;, [PIN], [NHIF], [NSSF], [BankBranchSortCode], [AccountName], [AccountNo], [Logo]&quot;+&#xD;&#xA;						&quot;, [IsDefault], [IsActive], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Employers  &quot;  +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			Employer employer = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new Employer&#xD;&#xA;						employer = new Employer();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						employer.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						employer.Name = base.GetDataValue&lt;string&gt;(dr, &quot;Name&quot;);&#xD;&#xA;						employer.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						employer.Telephone = base.GetDataValue&lt;string&gt;(dr, &quot;Telephone&quot;);&#xD;&#xA;						employer.Address1 = base.GetDataValue&lt;string&gt;(dr, &quot;Address1&quot;);&#xD;&#xA;						employer.Address2 = base.GetDataValue&lt;string&gt;(dr, &quot;Address2&quot;);&#xD;&#xA;						employer.Slogan = base.GetDataValue&lt;string&gt;(dr, &quot;Slogan&quot;);&#xD;&#xA;						employer.AuthorizedSignatory = base.GetDataValue&lt;string&gt;(dr, &quot;AuthorizedSignatory&quot;);&#xD;&#xA;						employer.PIN = base.GetDataValue&lt;string&gt;(dr, &quot;PIN&quot;);&#xD;&#xA;						employer.NHIF = base.GetDataValue&lt;string&gt;(dr, &quot;NHIF&quot;);&#xD;&#xA;						employer.NSSF = base.GetDataValue&lt;string&gt;(dr, &quot;NSSF&quot;);&#xD;&#xA;						employer.BankBranchSortCode = base.GetDataValue&lt;string&gt;(dr, &quot;BankBranchSortCode&quot;);&#xD;&#xA;						employer.AccountName = base.GetDataValue&lt;string&gt;(dr, &quot;AccountName&quot;);&#xD;&#xA;						employer.AccountNo = base.GetDataValue&lt;string&gt;(dr, &quot;AccountNo&quot;);&#xD;&#xA;						employer.Logo = base.GetDataValue&lt;string&gt;(dr, &quot;Logo&quot;);&#xD;&#xA;						employer.IsDefault = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDefault&quot;);&#xD;&#xA;						employer.IsActive = base.GetDataValue&lt;bool&gt;(dr, &quot;IsActive&quot;);&#xD;&#xA;						employer.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return employer;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the Employers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of Employer objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;Employer&gt; Select()&#xD;&#xA;		{&#xD;&#xA;			// WARNING! The following SQL query does not contain a WHERE condition.&#xD;&#xA;			// You are advised to include a WHERE condition to prevent any performance&#xD;&#xA;			// issues when querying large resultsets.&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [Name], [Email], [Telephone], [Address1], [Address2], [Slogan], [AuthorizedSignatory]&quot;+&#xD;&#xA;						&quot;, [PIN], [NHIF], [NSSF], [BankBranchSortCode], [AccountName], [AccountNo], [Logo]&quot;+&#xD;&#xA;						&quot;, [IsDefault], [IsActive], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Employers &quot;;&#xD;&#xA;&#xD;&#xA;			List&lt;Employer&gt; result = new List&lt;Employer&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new Employer&#xD;&#xA;						Employer employer = new Employer();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						employer.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						employer.Name = base.GetDataValue&lt;string&gt;(dr, &quot;Name&quot;);&#xD;&#xA;						employer.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						employer.Telephone = base.GetDataValue&lt;string&gt;(dr, &quot;Telephone&quot;);&#xD;&#xA;						employer.Address1 = base.GetDataValue&lt;string&gt;(dr, &quot;Address1&quot;);&#xD;&#xA;						employer.Address2 = base.GetDataValue&lt;string&gt;(dr, &quot;Address2&quot;);&#xD;&#xA;						employer.Slogan = base.GetDataValue&lt;string&gt;(dr, &quot;Slogan&quot;);&#xD;&#xA;						employer.AuthorizedSignatory = base.GetDataValue&lt;string&gt;(dr, &quot;AuthorizedSignatory&quot;);&#xD;&#xA;						employer.PIN = base.GetDataValue&lt;string&gt;(dr, &quot;PIN&quot;);&#xD;&#xA;						employer.NHIF = base.GetDataValue&lt;string&gt;(dr, &quot;NHIF&quot;);&#xD;&#xA;						employer.NSSF = base.GetDataValue&lt;string&gt;(dr, &quot;NSSF&quot;);&#xD;&#xA;						employer.BankBranchSortCode = base.GetDataValue&lt;string&gt;(dr, &quot;BankBranchSortCode&quot;);&#xD;&#xA;						employer.AccountName = base.GetDataValue&lt;string&gt;(dr, &quot;AccountName&quot;);&#xD;&#xA;						employer.AccountNo = base.GetDataValue&lt;string&gt;(dr, &quot;AccountNo&quot;);&#xD;&#xA;						employer.Logo = base.GetDataValue&lt;string&gt;(dr, &quot;Logo&quot;);&#xD;&#xA;						employer.IsDefault = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDefault&quot;);&#xD;&#xA;						employer.IsActive = base.GetDataValue&lt;bool&gt;(dr, &quot;IsActive&quot;);&#xD;&#xA;						employer.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(employer);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="Employer" TableName="Employers" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the Employers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Employers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Employers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Employers" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Employers" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Employers" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Employers" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AuthorizedSignatory" TableName="Employers" PropertyName="AuthorizedSignatory" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="PIN" TableName="Employers" PropertyName="PIN" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NHIF" TableName="Employers" PropertyName="NHIF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NSSF" TableName="Employers" PropertyName="NSSF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="BankBranchSortCode" TableName="Employers" PropertyName="BankBranchSortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountName" TableName="Employers" PropertyName="AccountName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountNo" TableName="Employers" PropertyName="AccountNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Employers" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDefault" TableName="Employers" PropertyName="IsDefault" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsActive" TableName="Employers" PropertyName="IsActive" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Employers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="Employer" TableName="Employers" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the Employers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Employers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Employers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Employers" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Employers" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Employers" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Employers" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AuthorizedSignatory" TableName="Employers" PropertyName="AuthorizedSignatory" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="PIN" TableName="Employers" PropertyName="PIN" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NHIF" TableName="Employers" PropertyName="NHIF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NSSF" TableName="Employers" PropertyName="NSSF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="BankBranchSortCode" TableName="Employers" PropertyName="BankBranchSortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountName" TableName="Employers" PropertyName="AccountName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountNo" TableName="Employers" PropertyName="AccountNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Employers" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDefault" TableName="Employers" PropertyName="IsDefault" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsActive" TableName="Employers" PropertyName="IsActive" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Employers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="Employer" TableName="Employers" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the Employers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="Employer" TableName="Employers" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the Employers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Employers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Employers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Employers" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Employers" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Employers" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Employers" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AuthorizedSignatory" TableName="Employers" PropertyName="AuthorizedSignatory" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="PIN" TableName="Employers" PropertyName="PIN" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NHIF" TableName="Employers" PropertyName="NHIF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NSSF" TableName="Employers" PropertyName="NSSF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="BankBranchSortCode" TableName="Employers" PropertyName="BankBranchSortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountName" TableName="Employers" PropertyName="AccountName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountNo" TableName="Employers" PropertyName="AccountNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Employers" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDefault" TableName="Employers" PropertyName="IsDefault" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsActive" TableName="Employers" PropertyName="IsActive" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Employers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="Select" EntityName="Employer" TableName="Employers" SchemaName="dbo" TableAlias="A" Type="Select" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the Employers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Employers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Employers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Employers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Employers" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Employers" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Employers" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Employers" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AuthorizedSignatory" TableName="Employers" PropertyName="AuthorizedSignatory" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="PIN" TableName="Employers" PropertyName="PIN" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NHIF" TableName="Employers" PropertyName="NHIF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NSSF" TableName="Employers" PropertyName="NSSF" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="BankBranchSortCode" TableName="Employers" PropertyName="BankBranchSortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountName" TableName="Employers" PropertyName="AccountName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="AccountNo" TableName="Employers" PropertyName="AccountNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Employers" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDefault" TableName="Employers" PropertyName="IsDefault" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsActive" TableName="Employers" PropertyName="IsActive" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Employers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
    </Methods>
  </ClassModel>
</ArrayOfClassModel>